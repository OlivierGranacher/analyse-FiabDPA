---
title: "Analyse des factures mensuelles DPA de Mille"
author: "OG"
format: 
  html:
    embed-resources: true
    toc: true
date: last-modified
lang: fr
code-fold: true
number-sections: true
editor: visual
fig-width: 8
fig-asp: .62
fig-align: left
execute:
  eval: true
  cache: false
  warning: false
  echo: false
  include: false
theme: flatly
---

```{r}
#| label: setup
#| cache: true
library(dplyr)
library(glue)
library(lubridate)
library(ggplot2)
theme_set(customColors::theme_potline())
# palette name pour plots - MetBrewer Package
pal_name <- "Austria"
file_path <- "data/factures_dpa_Mille.xlsx"
```

## Objectif

> Visualiser la décomposition des coûts de réparation des DPA sur la \>
> base des factures mensuelles de Mille

```{r}
#| label: import_data
# Import des données des diagnostics et réparations
d_raw <- readxl::read_xlsx(
  path = file_path,
  sheet = "data_detail",
  range = "A1:E1000"
) |> janitor::clean_names() |> 
  na.omit() |> 
  mutate(across(where(is.character), .fns = ~stringr::str_to_lower(.x)))
### période des données
dat_min <- min(d_raw$mois) |> format("%d-%m-%Y")
dat_max <- max(d_raw$mois) |> format("%d-%m-%Y")
# Import des catégories d'interventions
cat <- readxl::read_xlsx(
  path = file_path,
  sheet = "listes",
  range = "C1:D50"
) |> janitor::clean_names() |> 
  na.omit() |> 
  mutate(across(where(is.character), .fns = ~stringr::str_to_lower(.x)))
# Import des totaux couts par mois
cout_mois <- readxl::read_xlsx(
  path = file_path,
  sheet = "data_mois",
  range = "A1:B20"
) |> janitor::clean_names() |> 
  na.omit()
# Concaténation des données
ddd <- d_raw |> 
  left_join(
    cat,
    join_by(poste)
  ) |> 
  left_join(
    cout_mois,
    join_by(mois)
            )
# n_mois nombre de mois analysés
n_mois <- nrow(cout_mois)
```

```{r}
#| label: tidy_data
```

## Vérification des données

### Poste sans cout dans le mois

```{r}
#| label: couts_poste_mois
#| include: true
ddd |> 
group_by(poste) |> 
count() |> 
  ungroup() |> 
filter(n < n_mois) |> 
  gt::gt(caption = "Postes non présents tous les mois") |> 
  gt::opt_stylize(color = "gray")
```

### Couverture des Coûts Mensuels

> Pourcentage des couts analysés chaque mois

```{r}
#| label: pc_couts
#| include: true

ddd |> 
group_by(mois) |> 
summarise(pc_cout_analyse = sum(cout)/max(cout_dpa_mois)) |> 
gt::gt(cap = "% cout analysés") |> 
gt::fmt_percent(col = pc_cout_analyse, deci = 0)
```
